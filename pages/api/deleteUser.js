import { getServerSession } from "next-auth/next";
import { authOptions } from "./auth/[...nextauth]";
import clientPromise from "@/lib/mongodb";

export default async function handler(req, res) {
  if (req.method !== "DELETE") {
    return res.status(405).json({ 
      message: "ุงูุทุฑููุฉ ุบูุฑ ูุณููุญุฉ",
      error: "ููุณูุญ ููุท ุจู DELETE requests",
      details: `ุชู ุงุณุชุฎุฏุงู ${req.method} ุจุฏูุงู ูู DELETE`
    });
  }

  try {
    // ูุญุงููุฉ ุงูุญุตูู ุนูู ุงูุฌูุณุฉ
    console.log("๐ ูุญุงููุฉ ุงูุญุตูู ุนูู ุงูุฌูุณุฉ...");
    const session = await getServerSession(req, res, authOptions);

    // ุทุจุงุนุฉ ุชูุงุตูู ุงูุฌูุณุฉ ููุชุตุญูุญ
    console.log("๐ ุชูุงุตูู ุงูุฌูุณุฉ:", {
      sessionExists: !!session,
      userExists: !!session?.user,
      userEmail: session?.user?.email || 'ุบูุฑ ููุฌูุฏ',
      isVerified: session?.user?.isVerified || false
    });

    if (!session) {
      console.log("โ ูุดู: ูุง ุชูุฌุฏ ุฌูุณุฉ");
      return res.status(401).json({ 
        message: "ุบูุฑ ูุตุฑุญ ูู ุจุงููุตูู",
        error: "ูู ูุชู ุงูุนุซูุฑ ุนูู ุฌูุณุฉ ุตุญูุญุฉ",
        details: "ูุฌุจ ุชุณุฌูู ุงูุฏุฎูู ุฃููุงู ูููุตูู ููุฐู ุงูุฎุฏูุฉ",
        action: "ุงูุฑุฌุงุก ุชุณุฌูู ุงูุฏุฎูู ูุฑุฉ ุฃุฎุฑู"
      });
    }

    if (!session.user) {
      console.log("โ ูุดู: ูุง ุชูุฌุฏ ุจูุงูุงุช ูุณุชุฎุฏู ูู ุงูุฌูุณุฉ");
      return res.status(401).json({ 
        message: "ุจูุงูุงุช ุงููุณุชุฎุฏู ุบูุฑ ุตุญูุญุฉ",
        error: "ุงูุฌูุณุฉ ูุง ุชุญุชูู ุนูู ุจูุงูุงุช ุงููุณุชุฎุฏู",
        details: "ุฌูุณุฉ ุชุงููุฉ - ูุฌุจ ุฅุนุงุฏุฉ ุชุณุฌูู ุงูุฏุฎูู",
        action: "ุงูุฑุฌุงุก ุชุณุฌูู ุงูุฎุฑูุฌ ุซู ุงูุฏุฎูู ูุฑุฉ ุฃุฎุฑู"
      });
    }

    if (!session.user.email) {
      console.log("โ ูุดู: ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ุบูุฑ ููุฌูุฏ ูู ุงูุฌูุณุฉ");
      return res.status(400).json({ 
        message: "ุจูุงูุงุช ุงููุณุชุฎุฏู ูุงูุตุฉ",
        error: "ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ุบูุฑ ููุฌูุฏ ูู ุงูุฌูุณุฉ",
        details: "ูุง ูููู ุชุญุฏูุฏ ูููุฉ ุงููุณุชุฎุฏู ุจุฏูู ุงูุจุฑูุฏ ุงูุฅููุชุฑููู",
        action: "ุงูุฑุฌุงุก ุชุณุฌูู ุงูุฏุฎูู ูุฑุฉ ุฃุฎุฑู"
      });
    }

    console.log(`๐ ูุญุงููุฉ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ูููุณุชุฎุฏู: ${session.user.email}`);
    
    // ูุญุงููุฉ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
    let client;
    try {
      client = await clientPromise;
      console.log("โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ");
    } catch (dbError) {
      console.error("โ ูุดู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช:", dbError);
      return res.status(500).json({
        message: "ุฎุทุฃ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช",
        error: "ูุดู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช",
        details: `ุฎุทุฃ ุงูุงุชุตุงู: ${dbError.message}`,
        action: "ุงูุฑุฌุงุก ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู ูุงุญูุงู"
      });
    }

    const db = client.db();

    // ุงูุชุญูู ูู ูุฌูุฏ ุงููุณุชุฎุฏู ูุจู ุงูุญุฐู
    console.log(`๐ ุงูุจุญุซ ุนู ุงููุณุชุฎุฏู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช: ${session.user.email}`);
    
    let userExists;
    try {
      userExists = await db.collection("adminusers").findOne({ 
        email: session.user.email 
      });
      console.log("๐ ูุชูุฌุฉ ุงูุจุญุซ:", { userFound: !!userExists });
    } catch (findError) {
      console.error("โ ุฎุทุฃ ูู ุงูุจุญุซ ุนู ุงููุณุชุฎุฏู:", findError);
      return res.status(500).json({
        message: "ุฎุทุฃ ูู ุงูุจุญุซ",
        error: "ูุดู ุงูุจุญุซ ุนู ุงููุณุชุฎุฏู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช",
        details: `ุฎุทุฃ ุงูุจุญุซ: ${findError.message}`,
        action: "ุงูุฑุฌุงุก ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู"
      });
    }

    if (!userExists) {
      console.log(`โ ุงููุณุชุฎุฏู ุบูุฑ ููุฌูุฏ: ${session.user.email}`);
      return res.status(404).json({ 
        message: "ุงููุณุชุฎุฏู ุบูุฑ ููุฌูุฏ",
        error: "ูู ูุชู ุงูุนุซูุฑ ุนูู ุงููุณุชุฎุฏู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช",
        details: `ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ${session.user.email} ุบูุฑ ูุณุฌู ูู ุงููุธุงู`,
        action: "ุชุฃูุฏ ูู ุตุญุฉ ุงูุจูุงูุงุช ุฃู ูู ุจุฅูุดุงุก ุญุณุงุจ ุฌุฏูุฏ"
      });
    }

    console.log("๐๏ธ ูุญุงููุฉ ุญุฐู ุงููุณุชุฎุฏู...");

    // ูุญุงููุฉ ุญุฐู ุงููุณุชุฎุฏู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
    let deleteResult;
    try {
      deleteResult = await db.collection("adminusers").deleteOne({ 
        email: session.user.email 
      });
      
      console.log("๐ ูุชูุฌุฉ ุงูุญุฐู:", {
        acknowledged: deleteResult.acknowledged,
        deletedCount: deleteResult.deletedCount
      });
      
    } catch (deleteError) {
      console.error("โ ุฎุทุฃ ูู ุนูููุฉ ุงูุญุฐู:", deleteError);
      return res.status(500).json({
        message: "ูุดู ูู ุญุฐู ุงููุณุชุฎุฏู",
        error: "ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุนูููุฉ ุงูุญุฐู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช",
        details: `ุฎุทุฃ ุงูุญุฐู: ${deleteError.message}`,
        action: "ุงูุฑุฌุงุก ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู ุฃู ุงูุงุชุตุงู ุจุงูุฏุนู ุงูููู"
      });
    }

    if (!deleteResult.acknowledged) {
      console.log("โ ุนูููุฉ ุงูุญุฐู ุบูุฑ ูุคูุฏุฉ");
      return res.status(500).json({
        message: "ุนูููุฉ ุงูุญุฐู ุบูุฑ ูุคูุฏุฉ",
        error: "ูุงุนุฏุฉ ุงูุจูุงูุงุช ูู ุชุคูุฏ ุนูููุฉ ุงูุญุฐู",
        details: "ูุฏ ูููู ููุงู ูุดููุฉ ูู ุงูุงุชุตุงู ุฃู ูู ุฅุนุฏุงุฏุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช",
        action: "ุงูุฑุฌุงุก ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู ุฃู ุงูุงุชุตุงู ุจุงูุฏุนู ุงูููู"
      });
    }

    if (deleteResult.deletedCount === 0) {
      console.log("โ ูู ูุชู ุญุฐู ุฃู ุณุฌู");
      return res.status(404).json({ 
        message: "ูุดู ูู ุงูุญุฐู",
        error: "ูู ูุชู ุญุฐู ุฃู ุณุฌู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช",
        details: "ุงููุณุชุฎุฏู ูุฏ ูููู ูุญุฐูู ูุณุจูุงู ุฃู ุญุฏุซ ุฎุทุฃ ูู ุนูููุฉ ุงูุจุญุซ",
        action: "ุชุญูู ูู ุญุงูุฉ ุงูุญุณุงุจ ุฃู ูู ุจุชุญุฏูุซ ุงูุตูุญุฉ"
      });
    }

    console.log("โ ุชู ุญุฐู ุงููุณุชุฎุฏู ุจูุฌุงุญ");

    res.status(200).json({ 
      message: "ุชู ุญุฐู ุงููุณุชุฎุฏู ุจูุฌุงุญ",
      success: true,
      details: `ุชู ุญุฐู ุญุณุงุจ ${session.user.email} ูู ุงููุธุงู`,
      deletedCount: deleteResult.deletedCount,
      timestamp: new Date().toISOString()
    });

  } catch (error) {
    console.error("๐ฅ ุฎุทุฃ ุนุงู ูู API:", {
      message: error.message,
      stack: error.stack,
      name: error.name
    });
    
    res.status(500).json({ 
      message: "ุฎุทุฃ ุฏุงุฎูู ูู ุงูุฎุงุฏู",
      error: "ุญุฏุซ ุฎุทุฃ ุบูุฑ ูุชููุน ูู ุงููุธุงู",
      details: process.env.NODE_ENV === 'development' ? 
        `ุชูุงุตูู ุงูุฎุทุฃ: ${error.message}` : 
        'ุญุฏุซ ุฎุทุฃ ุชูููุ ุงูุฑุฌุงุก ุงููุญุงููุฉ ูุงุญูุงู',
      errorType: error.name,
      action: "ุฅุฐุง ุงุณุชูุฑุช ุงููุดููุฉุ ุงูุฑุฌุงุก ุงูุงุชุตุงู ุจุงูุฏุนู ุงูููู",
      timestamp: new Date().toISOString()
    });
  }
}