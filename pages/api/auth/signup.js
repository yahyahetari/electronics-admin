import { hash } from 'bcryptjs'
import clientPromise from "@/lib/mongodb"

const adminEmails = [
  'yahyahetari2002@gmail.com', 
  'yahyaalhetari5@gmail.com', 
  'Hazembohloly@gmail.com',
  'marianmansor22@gmail.com'
];

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ 
      error: 'ุงูุทุฑููุฉ ุบูุฑ ูุณููุญุฉ',
      message: 'ููุณูุญ ููุท ุจู POST requests',
      details: `ุชู ุงุณุชุฎุฏุงู ${req.method} ุจุฏูุงู ูู POST`,
      action: 'ุชุฃูุฏ ูู ุงุณุชุฎุฏุงู ุงูุทุฑููุฉ ุงูุตุญูุญุฉ'
    })
  }

  const { name, email, password } = req.body

  // ุงูุชุญูู ูู ูุฌูุฏ ุงูุจูุงูุงุช ุงููุทููุจุฉ
  if (!name || !email || !password) {
    console.log("โ ุจูุงูุงุช ูุงูุตุฉ:", { name: !!name, email: !!email, password: !!password });
    return res.status(400).json({ 
      error: 'ุจูุงูุงุช ูุงูุตุฉ',
      message: 'ุฌููุน ุงูุญููู ูุทููุจุฉ',
      details: {
        name: !name ? 'ุงูุงุณู ูุทููุจ' : 'ููุฌูุฏ',
        email: !email ? 'ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ูุทููุจ' : 'ููุฌูุฏ',
        password: !password ? 'ูููุฉ ุงููุฑูุฑ ูุทููุจุฉ' : 'ููุฌูุฏ'
      },
      action: 'ุงูุฑุฌุงุก ููุก ุฌููุน ุงูุญููู ุงููุทููุจุฉ'
    })
  }

  // ุงูุชุญูู ูู ุตุญุฉ ุงูุงุณู
  if (name.trim().length < 10) {
    console.log(`โ ุงูุงุณู ูุตูุฑ ุฌุฏุงู: ${name.length} ุฃุญุฑู`);
    return res.status(400).json({ 
      error: 'ุงูุงุณู ูุตูุฑ ุฌุฏุงู',
      message: 'ุงูุงุณู ูุฌุจ ุฃู ูููู 10 ุฃุญุฑู ุนูู ุงูุฃูู',
      details: `ุงูุงุณู ุงูุญุงูู ูุญุชูู ุนูู ${name.trim().length} ุฃุญุฑู ููุท`,
      action: 'ุฃุฏุฎู ุงุณูุงู ูุงููุงู ูุญุชูู ุนูู 10 ุฃุญุฑู ุนูู ุงูุฃูู'
    })
  }

  // ุงูุชุญูู ูู ุตุญุฉ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  if (!emailRegex.test(email)) {
    console.log(`โ ุจุฑูุฏ ุฅููุชุฑููู ุบูุฑ ุตุญูุญ: ${email}`);
    return res.status(400).json({ 
      error: 'ุจุฑูุฏ ุฅููุชุฑููู ุบูุฑ ุตุญูุญ',
      message: 'ุชูุณูู ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ุบูุฑ ุตุงูุญ',
      details: 'ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ูุฌุจ ุฃู ูููู ุจุงูุชูุณูู: example@domain.com',
      action: 'ุฃุฏุฎู ุจุฑูุฏ ุฅููุชุฑููู ุตุญูุญ'
    })
  }

  // ุงูุชุญูู ูู ูููุฉ ุงููุฑูุฑ
  if (password.length < 6) {
    console.log(`โ ูููุฉ ูุฑูุฑ ูุตูุฑุฉ: ${password.length} ุฃุญุฑู`);
    return res.status(400).json({ 
      error: 'ูููุฉ ุงููุฑูุฑ ุถุนููุฉ',
      message: 'ูููุฉ ุงููุฑูุฑ ูุฌุจ ุฃู ุชููู 6 ุฃุญุฑู ุนูู ุงูุฃูู',
      details: `ูููุฉ ุงููุฑูุฑ ุงูุญุงููุฉ ุชุญุชูู ุนูู ${password.length} ุฃุญุฑู ููุท`,
      action: 'ุฃุฏุฎู ูููุฉ ูุฑูุฑ ูููุฉ ุชุญุชูู ุนูู 6 ุฃุญุฑู ุนูู ุงูุฃูู'
    })
  }

  // ุงูุชุญูู ูู ุตูุงุญูุฉ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ููุชุณุฌูู
  if (!adminEmails.includes(email)) {
    console.log(`โ ุจุฑูุฏ ุบูุฑ ูุตุฑุญ: ${email}`);
    return res.status(403).json({ 
      error: 'ุจุฑูุฏ ุฅููุชุฑููู ุบูุฑ ูุตุฑุญ',
      message: 'ูุฐุง ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ุบูุฑ ูุณููุญ ูู ุจุงูุชุณุฌูู',
      details: 'ููุท ุงูุฅููููุงุช ุงููุตุฑุญุฉ ูููููุง ุฅูุดุงุก ุญุณุงุจุงุช ูู ุงููุธุงู',
      action: 'ุชูุงุตู ูุน ุงูุฅุฏุงุฑุฉ ููุญุตูู ุนูู ุตูุงุญูุฉ ุงูุชุณุฌูู',
      allowedEmails: adminEmails.map(email => email.replace(/(.{3}).*(@.*)/, '$1***$2'))
    })
  }

  try {
    console.log(`๐ ูุญุงููุฉ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช...`);
    
    // ูุญุงููุฉ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
    let client;
    try {
      client = await clientPromise;
      console.log("โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ");
    } catch (dbError) {
      console.error("โ ูุดู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช:", dbError);
      return res.status(500).json({
        error: 'ุฎุทุฃ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช',
        message: 'ูุดู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช',
        details: `ุฎุทุฃ ุงูุงุชุตุงู: ${dbError.message}`,
        action: 'ุงูุฑุฌุงุก ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู ูุงุญูุงู'
      });
    }

    const db = client.db()

    console.log(`๐ ุงูุชุญูู ูู ูุฌูุฏ ุงููุณุชุฎุฏู: ${email}`);

    // ุงูุชุญูู ูู ูุฌูุฏ ุงููุณุชุฎุฏู ูุณุจูุงู
    let existingUser;
    try {
      existingUser = await db.collection('adminusers').findOne({ email });
      console.log("๐ ูุชูุฌุฉ ุงูุจุญุซ:", { userExists: !!existingUser });
    } catch (findError) {
      console.error("โ ุฎุทุฃ ูู ุงูุจุญุซ ุนู ุงููุณุชุฎุฏู:", findError);
      return res.status(500).json({
        error: 'ุฎุทุฃ ูู ุงูุจุญุซ',
        message: 'ูุดู ุงูุจุญุซ ุนู ุงููุณุชุฎุฏู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช',
        details: `ุฎุทุฃ ุงูุจุญุซ: ${findError.message}`,
        action: 'ุงูุฑุฌุงุก ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู'
      });
    }

    if (existingUser) {
      console.log(`โ ุงููุณุชุฎุฏู ููุฌูุฏ ูุณุจูุงู: ${email}`);
      return res.status(400).json({ 
        error: 'ุงููุณุชุฎุฏู ููุฌูุฏ ูุณุจูุงู',
        message: 'ููุฌุฏ ุญุณุงุจ ูุณุฌู ุจูุฐุง ุงูุจุฑูุฏ ุงูุฅููุชุฑููู',
        details: `ุงูุญุณุงุจ ${email} ูุณุฌู ูู ุงููุธุงู ููุฐ ${new Date(existingUser.createdAt || Date.now()).toLocaleDateString('ar-EG')}`,
        action: 'ุงุณุชุฎุฏู ุจุฑูุฏ ุฅููุชุฑููู ูุฎุชูู ุฃู ูู ุจุชุณุฌูู ุงูุฏุฎูู'
      })
    }

    console.log(`๐ ุชุดููุฑ ูููุฉ ุงููุฑูุฑ...`);

    // ุชุดููุฑ ูููุฉ ุงููุฑูุฑ
    let hashedPassword;
    try {
      hashedPassword = await hash(password, 12);
      console.log("โ ุชู ุชุดููุฑ ูููุฉ ุงููุฑูุฑ ุจูุฌุงุญ");
    } catch (hashError) {
      console.error("โ ูุดู ูู ุชุดููุฑ ูููุฉ ุงููุฑูุฑ:", hashError);
      return res.status(500).json({
        error: 'ุฎุทุฃ ูู ุงูุชุดููุฑ',
        message: 'ูุดู ูู ุชุดููุฑ ูููุฉ ุงููุฑูุฑ',
        details: `ุฎุทุฃ ุงูุชุดููุฑ: ${hashError.message}`,
        action: 'ุงูุฑุฌุงุก ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู'
      });
    }

    console.log(`๐พ ุฅูุดุงุก ุงููุณุชุฎุฏู ุงูุฌุฏูุฏ: ${email}`);

    // ุฅูุดุงุก ุงููุณุชุฎุฏู ุงูุฌุฏูุฏ
    let result;
    try {
      result = await db.collection('adminusers').insertOne({
        name: name.trim(),
        email: email.toLowerCase(),
        password: hashedPassword,
        isVerified: false,
        createdAt: new Date(),
        lastLogin: null,
        role: 'admin'
      });

      console.log("โ ุชู ุฅูุดุงุก ุงููุณุชุฎุฏู ุจูุฌุงุญ:", { insertedId: result.insertedId });

    } catch (insertError) {
      console.error("โ ูุดู ูู ุฅูุดุงุก ุงููุณุชุฎุฏู:", insertError);
      
      // ุงูุชุญูู ูู ููุน ุงูุฎุทุฃ
      if (insertError.code === 11000) {
        return res.status(400).json({
          error: 'ุจูุงูุงุช ููุฑุฑุฉ',
          message: 'ุงููุณุชุฎุฏู ููุฌูุฏ ูุณุจูุงู',
          details: 'ุชู ุงูุชุดุงู ุชุถุงุฑุจ ูู ุงูุจูุงูุงุช ุงููุฏุฎูุฉ',
          action: 'ุงุณุชุฎุฏู ุจุฑูุฏ ุฅููุชุฑููู ูุฎุชูู'
        });
      }

      return res.status(500).json({
        error: 'ูุดู ูู ุฅูุดุงุก ุงููุณุชุฎุฏู',
        message: 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุญูุธ ุจูุงูุงุช ุงููุณุชุฎุฏู',
        details: `ุฎุทุฃ ุงูุญูุธ: ${insertError.message}`,
        action: 'ุงูุฑุฌุงุก ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู'
      });
    }

    console.log("๐ ุชู ุงูุชุณุฌูู ุจูุฌุงุญ");

    res.status(201).json({ 
      success: true,
      message: 'ุชู ุฅูุดุงุก ุงูุญุณุงุจ ุจูุฌุงุญ',
      details: `ุชู ุฅูุดุงุก ุญุณุงุจ ุฌุฏูุฏ ูููุณุชุฎุฏู ${name}`,
      userId: result.insertedId,
      email: email,
      timestamp: new Date().toISOString(),
      nextStep: 'ูุฑุฌู ุชุณุฌูู ุงูุฏุฎูู ูุชูุนูู ุงูุญุณุงุจ'
    })

  } catch (error) {
    console.error('๐ฅ ุฎุทุฃ ุนุงู ูู ุงูุชุณุฌูู:', {
      message: error.message,
      stack: error.stack,
      name: error.name
    })
    
    res.status(500).json({ 
      error: 'ุฎุทุฃ ุฏุงุฎูู ูู ุงูุฎุงุฏู',
      message: 'ุญุฏุซ ุฎุทุฃ ุบูุฑ ูุชููุน ุฃุซูุงุก ุงูุชุณุฌูู',
      details: process.env.NODE_ENV === 'development' ? 
        `ุชูุงุตูู ุงูุฎุทุฃ: ${error.message}` : 
        'ุญุฏุซ ุฎุทุฃ ุชูููุ ุงูุฑุฌุงุก ุงููุญุงููุฉ ูุงุญูุงู',
      errorType: error.name,
      action: 'ุฅุฐุง ุงุณุชูุฑุช ุงููุดููุฉุ ุงูุฑุฌุงุก ุงูุงุชุตุงู ุจุงูุฏุนู ุงูููู',
      timestamp: new Date().toISOString()
    })
  }
}